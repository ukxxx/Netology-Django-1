name: Testing CI\CD

on:
    push:
        branches:
            - video
            - main

jobs:
    testing:
        runs-on: ubuntu-22.04
        env: 
            ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        services: 
            postgresql_service:
                image: postgres:12
                env:
                    POSTGRES_DB: ${{ env.DB_NAME }}
                    POSTGRES_USER: ${{ env.DB_USER }}
                    POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
                ports:
                    - 5432:5432
                options:
                    --health-cmd pg_isready
                    --health-interval 5s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Check for changes in repository
              uses: actions/checkout@v3

            - name: Install python and libraries
              uses: actions/setup-python@v4
              with:
                python-version: '3.10'

            - name: Change working directory
              run: cd 3.2-crud/stocks_products/

            - name: Install dependencies
              run: pip install -r 3.2-crud/stocks_products/requirements.txt

            - name: Linting
              run: flake8 ./3.2-crud/ --exclude migrations
              
            - name: Testing
              run: python 3.2-crud/stocks_products/manage.py test
              env:
                DB_NAME: ${{ env.DB_NAME }}
                DB_USER: ${{ env.DB_USER }}
                DB_PASSWORD: ${{ env.DB_PASSWORD }}
                ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
            
            - name: Deploy
              uses: appleboy/ssh-action@master
              env:
                PASSWORD: ${{ secrets.SSH_PASSWORD }}
              with: 
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                password: ${{ secrets.SSH_PASSWORD }}
                script: expect /home/uk/Netology-Django-1/deploy.exp

         
                